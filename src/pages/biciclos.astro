---
import Crud from '../components/Crud.astro';
import Modal from '../components/Modal.astro';
import Layout from '../layouts/Layout.astro';
import NewBicicloForm from '../components/biciclo/NewBicicloForm.astro';
import DeleteBicicloForm from '../components/biciclo/DeleteBicicloForm.astro';
import { supabase } from '../lib/supabase';
import EditBicicloForm from '../components/biciclo/EditBicicloForm.astro';
const {data} = await supabase.from('Biciclo').select('*')

const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return Astro.redirect("/signin");
}

let session;
try {
  session = await supabase.auth.setSession({
    refresh_token: refreshToken.value,
    access_token: accessToken.value,
  });
  if (session.error) {
    Astro.cookies.delete("sb-access-token", {
      path: "/",
    });
    Astro.cookies.delete("sb-refresh-token", {
      path: "/",
    });
    return Astro.redirect("/signin");
  }
} catch (error) {
  Astro.cookies.delete("sb-access-token", {
    path: "/",
  });
  Astro.cookies.delete("sb-refresh-token", {
    path: "/",
  });
  return Astro.redirect("/signin");
}

---
<Layout title="Biciclos">
	<Crud
 title="Biciclos"
	items={data}
	renderItem={(item) => `${item.NroBiciclo} - ${item.CodigoCuadro}`}
	onAdd="newBiciModal"
	onEdit={(item) => `editModal${item.NroBiciclo}`}
	onDelete={(item) => `delModal${item.NroBiciclo}`}
 />
 <Modal id="newBiciModal">
	 <NewBicicloForm slot="main" />
 </Modal>
{
 data?.map((item) => (
	 <Modal id={`delModal${item.NroBiciclo}`}>
		 <DeleteBicicloForm slot="main" id={item.NroBiciclo} />
	 </Modal>
	 <Modal id={`editModal${item.NroBiciclo}`}>
		 <EditBicicloForm slot="main" id={item.NroBiciclo} />
	 </Modal>
 ))
}

</Layout>